on:
  push:
    tags:
      - "cli/*"

name: Create CLI release

jobs:
  build:
    name: Create CLI release
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Substitute version
        run: |
          BRANCH="$(echo "${GITHUB_REF}" | cut -d/ -f3-)"
          if test -z "${BRANCH}"; then
              echo "ERROR: Unable to determine branch name"
              exit 1
          fi
          VERSION="$(echo "${BRANCH}" | cut -d/ -f2)"
          if test -z "${VERSION}"; then
              echo "ERROR: Unable to determine version"
              exit 1
          fi
          sed -i "s/MY_VERSION=master/MY_VERSION=${VERSION}/" pkgctl.sh

      - name: Create changelog
        run: |
          TIMESTAMP=$(
              curl "https://api.github.com/repos/nicholasdille/packages/releases" \
                  --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  --silent | \
                      jq 'map(select(.tag_name | startswith("cli/"))) | first' | \
                      jq --raw-output '.published_at'
          )
          if test -z "${TIMESTAMP}"; then
              echo "ERROR: Unable to determine timestamp"
              exit 1
          fi

          (
              echo "# Changelog"
              echo
              echo "## Issues closed:"
              echo
              curl "https://api.github.com/search/issues?sort=updated&order=desc&q=repo:nicholasdille/packages+type:issue+-label:component/package+is:closed+closed:>${TIMESTAMP}" \
                  --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  --silent | \
                      jq --raw-output '.items[] | "- \(.title) (#\(.number))"'
          ) >CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pkgctl.sh
          asset_name: pkgctl
          asset_content_type: text/x-shellscript
