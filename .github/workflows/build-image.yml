name: Build images

on:
  schedule:
  - cron:  '0 7 * * *'
  push:
    branches:
    - master
    paths:
    - Dockerfile
    - .github/workflows/build-image.yml

jobs:

  build-ubuntu-bionic:
    name: Ubuntu 18.04
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: "${{ secrets.DOCKER_HUB_USERNAME }}/packages-runtime"
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        target: ubuntu-18.04
        cache-from: "${{ env.IMAGE_NAME }}:ubuntu-18.04"
        push: ${{ github.event_name != 'pull_request' }}
        tags: "${{ env.IMAGE_NAME }}:ubuntu-18.04"
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Run Trivy vulnerability scanner
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ env.IMAGE_NAME }}:ubuntu-18.04"
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'

  build-ubuntu-focal:
    name: Ubuntu 20.04
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: "${{ secrets.DOCKER_HUB_USERNAME }}/packages-runtime"
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        target: ubuntu-20.04
        cache-from: "${{ env.IMAGE_NAME }}:ubuntu-20.04"
        push: ${{ github.event_name != 'pull_request' }}
        tags: "${{ env.IMAGE_NAME }}:ubuntu-20.04"
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Run Trivy vulnerability scanner
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ env.IMAGE_NAME }}:ubuntu-20.04"
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'

  build-ubuntu-groovy:
    name: Ubuntu 20.10
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: "${{ secrets.DOCKER_HUB_USERNAME }}/packages-runtime"
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        target: ubuntu-20.10
        cache-from: "${{ env.IMAGE_NAME }}:ubuntu-20.10"
        push: ${{ github.event_name != 'pull_request' }}
        tags: "${{ env.IMAGE_NAME }}:ubuntu-20.10"
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Run Trivy vulnerability scanner
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ env.IMAGE_NAME }}:ubuntu-20.10"
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'

  build-ubuntu-hirsute:
    name: Ubuntu 21.04
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: "${{ secrets.DOCKER_HUB_USERNAME }}/packages-runtime"
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        target: ubuntu-21.04
        cache-from: "${{ env.IMAGE_NAME }}:ubuntu-21.04"
        push: ${{ github.event_name != 'pull_request' }}
        tags: "${{ env.IMAGE_NAME }}:ubuntu-21.04"
        labels: ${{ steps.docker_meta.outputs.labels }}

    - name: Run Trivy vulnerability scanner
      if: github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{ env.IMAGE_NAME }}:ubuntu-21.04"
        severity: HIGH,CRITICAL
        ignore-unfixed: true
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
