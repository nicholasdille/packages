on:
  pull_request:
    types:
    - opened
    - reopened

name: Test package

jobs:
  build:
    name: Test package
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test package
        env:
          TARGET_BASE: /tmp
          DOCKER_BUILDKIT: 1
        run: |
          if test "${GITHUB_EVENT_NAME}" == "pull_request"; then
              PR=$(echo "${GITHUB_REF}" | cut -d'/' -f3)
              echo "Running for PR #${PR}"

              source /etc/lsb-release
              docker build \
                  --target "${DISTRIB_ID,,}-${DISTRIB_CODENAME}" \
                  --tag test-package:ubuntu .

              FILES=$(curl --silent --location --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PR}/files" | jq --raw-output '.[].filename')
              for FILE in ${FILES}; do
                  if test "$(echo "${FILE}" | cut -d'/' -f2)" == "package.yaml"; then
                      PACKAGE=${FILE%/package.yaml}

                      echo "Testing package ${PACKAGE}"
                      docker ps --filter name="test-${PACKAGE}" --all --quiet | xargs -r docker rm -f
                      docker run -d --name "test-${PACKAGE}" --env GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} --mount=type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock test-package:ubuntu
                      docker exec "test-${PACKAGE}" bash -c "curl -sL https://pkg.dille.io/pkgctl.sh | bash -s cache"
                      docker exec "test-${PACKAGE}" bash -c "curl -sL https://pkg.dille.io/pkgctl.sh | bash -s install docker"
                      docker exec "test-${PACKAGE}" bash -c "curl -sL https://pkg.dille.io/pkgctl.sh | bash -s install ${PACKAGE}"
                      docker rm -f "test-${PACKAGE}"
                  fi
              done
          fi
