on:
  pull_request:
    types:
    - opened
    - reopened

name: Test package

jobs:
  build:
    name: Test package
    runs-on: ubuntu-20.04
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Test package
        env:
          TARGET_BASE: /tmp
          DOCKER_BUILDKIT: 1
        run: |
          if test "${GITHUB_EVENT_NAME}" == "pull_request"; then
              PR=$(echo "${GITHUB_REF}" | cut -d'/' -f3)
              echo "Running for PR #${PR}"

              source /etc/lsb-release
              export GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

              make packages.json

              FILES=$(curl --silent --location --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${PR}/files" | jq --raw-output '.[].filename')
              for FILE in ${FILES}; do
                  if test "$(echo "${FILE}" | cut -d'/' -f2)" == "package.yaml"; then
                      PACKAGE="${FILE%/package.yaml}"

                      echo "Testing package ${PACKAGE}"
                      docker ps \
                              --filter name="test-${PACKAGE}" \
                              --all \
                              --quiet | \
                          xargs -r \
                              docker rm --force
                      docker run \
                          --name "test-${PACKAGE}" \
                          --detach \
                          --env GITHUB_TOKEN \
                          --mount type=bind,src=/var/run/docker.sock,dst=/var/run/docker.sock \
                          --mount type=bind,src=${PWD}/packages.json,dst=/root/.pkgctl/packages.json \
                          --mount type=bind,src=${PWD}/pkgctl.sh,dst=/usr/local/bin/pkgctl.sh \
                          "nicholasdille/packages-build:${DISTRIB_ID,,}-${DISTRIB_CODENAME}"
                      docker exec "test-${PACKAGE}" pkgctl.sh install docker
                      docker exec "test-${PACKAGE}" pkgctl.sh install "${PACKAGE}"
                      docker rm -f "test-${PACKAGE}"
                  fi
              done
          fi
