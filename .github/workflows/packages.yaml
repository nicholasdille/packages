on:
  push:
    tags:
      - "packages/*"

name: Create release

jobs:
  build:
    name: Create release
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare release
        run: |
          make tools packages.json

      - name: Create changelog
        run: |
          function github_api() {
              local path=$1

              if test -z "${GITHUB_TOKEN}"; then
                  echo "ERROR: Missing GitHub token"
                  exit 1
              fi

              curl "https://api.github.com${path}" \
                      --header "Authorization: token ${GITHUB_TOKEN}" \
                      --silent
          }

          TIMESTAMP=$(
              github_api "/repos/nicholasdille/packages/releases" | \
                  jq 'map(select(.tag_name | startswith("packages/"))) | first' | \
                  jq --raw-output '.published_at'
          )
          if test -z "${TIMESTAMP}"; then
              echo "ERROR: Unable to determine timestamp"
              exit 1
          fi

          (
              echo "# Changelog"
              echo
              echo "## Packages updated:"
              echo
              github_api "/search/issues?sort=updated&order=desc&q=repo:nicholasdille/packages+type:pr+label:type/renovate+is:merged+merged:>${TIMESTAMP}" | \
                  jq --raw-output '.items[] | "- \(.title) (#\(.number))"'
              echo
              echo "## Packages added/fixed:"
              echo
              github_api "/search/issues?sort=updated&order=desc&q=repo:nicholasdille/packages+type:issue+label:component/package+is:closed+closed:>${TIMESTAMP}" | \
                  jq --raw-output '.items[] | "- \(.title) (#\(.number))"'
          ) >CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packages.json
          asset_name: packages.json
          asset_content_type: application/json
