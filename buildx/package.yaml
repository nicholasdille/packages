name: buildx
description: Docker CLI plugin for extended build capabilities with BuildKit
repo: docker/buildx
links:
  - text: Docker CLI plugins proposal
    url: https://github.com/docker/cli/issues/1534
version:
  latest: v0.4.2 # renovate: datasource=github-releases depName=docker/buildx
  command: docker buildx version
  filter: ^github
  pattern: s/^github.com\/docker\/buildx\s(.+)\s.+$/\1/
tags:
  - docker
  - container
  - build
  - builder
  - plugin
  - image
install:
  script: |-
    : "${DOCKER_CLI_DIR:=${TARGET}/lib/docker/cli-plugins}"
    : "${DOCKER_CONFIG:=${HOME}/.docker}"

    REQUIRED_DOCKER_VERSION=18.09
    # Get smaller version of required and current version
    DOCKER_VERSION=$(\
        (\
            docker version --format '{{.Client.Version}}'; \
            echo "${REQUIRED_DOCKER_VERSION}"; \
        ) | \
        sort --version-sort | \
        head -n 1; \
    )
    # if smaller version if required version
    if test "${DOCKER_VERSION}" != "${REQUIRED_DOCKER_VERSION}"; then
        echo "Error: Please install Docker >=${REQUIRED_DOCKER_VERSION}."
        exit 1
    fi

    ${SUDO} mkdir --parents "${DOCKER_CLI_DIR}"

    echo "https://github.com/docker/buildx/releases/download/${requested_version}/buildx-${requested_version}.linux-amd64" | \
        download_file | \
        store_file docker-buildx "${DOCKER_CLI_DIR}" | \
        make_executable

    if ! test -f "${DOCKER_CONFIG}/config.json"; then
        echo "{}" >"${DOCKER_CONFIG}/config.json"
    fi

    cp "${DOCKER_CONFIG}/config.json" "${DOCKER_CONFIG}/config.json.bak"
    jq '. + {"experimental": "enabled"}' "${DOCKER_CONFIG}/config.json.bak" >"${DOCKER_CONFIG}/config.json"

    echo "######################################################################"
    echo "### You can now:"
    echo "### - Make buildx the default builder:"
    echo "###     docker buildx install"
    echo "### - Enable cross-platform buildx:"
    echo "###     docker run --privileged --rm tonistiigi/binfmt --install all"
    echo "### - Create a custom builder:"
    echo "###     docker buildx create --name mybuilder --use"
    echo "######################################################################"
