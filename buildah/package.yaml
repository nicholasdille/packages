name: buildah
description: A tool that facilitates building OCI images
repo: containers/buildah
version:
  latest: 1.19.1 # renovate: datasource=github-releases depName=containers/buildah
  command: buildah --version
  filter: ^buildah
  pattern: s/^buildah\sversion\s(\S+)\s.+$/\1/
tags:
  - container
  - build
  - builder
files:
  - name: Dockerfile
    content: |
      FROM ubuntu:18.04
      ENV DEBIAN_FRONTEND=noninteractive
      RUN apt-get update \
       && apt-get -y install --no-install-recommends \
              software-properties-common \
       && add-apt-repository -y ppa:alexlarsson/flatpak \
       && add-apt-repository -y ppa:gophers/archive \
       && add-apt-repository -y ppa:projectatomic/ppa \
       && apt-get -y -qq update \
       && apt-get -y install \
              bats \
              btrfs-tools \
              git \
              libapparmor-dev \
              libdevmapper-dev \
              libglib2.0-dev \
              libgpgme11-dev \
              libseccomp-dev \
              libselinux1-dev \
              skopeo-containers \
              go-md2man \
              curl \
       && mkdir -p /usr/lib/go-1.13 \
       && curl --silent --location https://golang.org/dl/go1.13.15.linux-amd64.tar.gz | \
              tar -xzC /usr/lib/go-1.13 --strip-components=1
install:
  docker: true
  requires:
  - runc
  - cni
  - cnitool
  script: |-
    require runc
    require cni
    require cnitool

    docker build --tag build-buildah .

    build_containerized build-buildah <<EOF
    echo "START"
    export PATH="/usr/lib/go-1.13/bin:\${PATH}"

    echo "Setting up go..."
    mkdir "\${HOME}/buildah"
    cd "\${HOME}/buildah"
    export GOPATH="\${PWD}"

    echo "Downloading sources..."
    mkdir -p ./src/github.com/containers/buildah
    git clone https://github.com/containers/buildah ./src/github.com/containers/buildah
    cd ./src/github.com/containers/buildah
    git checkout v${requested_version}

    echo "Building..."
    make all SECURITYTAGS="apparmor seccomp"
    make install

    cp /usr/local/bin/buildah /
    cp /usr/local/share/man/man1/buildah*.1 /
    EOF

    ${SUDO} mkdir --parents "${TARGET_BASE}/share/man/man1/"
    extract_file_from_container buildah
    for MAN in buildah-add buildah-bud buildah-commit buildah-config buildah-containers buildah-copy buildah-from buildah-images buildah-info buildah-inspect buildah-login buildah-logout buildah-manifest-add buildah-manifest-annotate buildah-manifest-create buildah-manifest-inspect buildah-manifest-push buildah-manifest-remove buildah-manifest buildah-mount buildah-pull buildah-push buildah-rename buildah-rm buildah-rmi buildah-run buildah-tag buildah-umount buildah-unshare buildah-version buildah; do
        docker cp "${container_name}:/${MAN}.1" "${MAN}.1"
        TARGET="${TARGET_BASE}/share/man/man1" install_file "${MAN}.1"
    done

    docker image rm -f build-buildah
