name: python
description: The Python programming language
repo: python/cpython
version:
  latest: 3.9.1 # renovate: datasource=github-tags depName=python/cpython
  command: ${TARGET_BIN}/python3 --version
  filter: ^Python
  pattern: s/^Python\s(.+)$/\1/
tags:
  - python
  - py
files:
- name: Dockerfile
  content: |
      FROM ubuntu:20.10 AS ubuntu-20.10
      ENV DEBIAN_FRONTEND=noninteractive
      RUN apt-get update \
       && apt-get -y install --no-install-recommends \
              build-essential \
              libreadline-gplv2-dev \
              libncursesw5-dev \
              libssl-dev \
              libsqlite3-dev \
              tk-dev \
              libgdbm-dev \
              libc6-dev \
              libbz2-dev \
              libffi-dev \
              zlib1g-dev \
              openssl \
              curl \
              ca-certificates

      FROM ubuntu:20.04 AS ubuntu-20.04
      ENV DEBIAN_FRONTEND=noninteractive
      RUN apt-get update \
       && apt-get -y install --no-install-recommends \
              build-essential \
              libreadline-gplv2-dev \
              libncursesw5-dev \
              libssl-dev \
              libsqlite3-dev \
              tk-dev \
              libgdbm-dev \
              libc6-dev \
              libbz2-dev \
              libffi-dev \
              zlib1g-dev \
              openssl \
              curl \
              ca-certificates

      FROM ubuntu:18.04 AS ubuntu-18.04
      ENV DEBIAN_FRONTEND=noninteractive
      RUN apt-get update \
       && apt-get -y install --no-install-recommends \
              build-essential \
              libreadline-gplv2-dev \
              libncursesw5-dev \
              libssl-dev \
              libsqlite3-dev \
              tk-dev \
              libgdbm-dev \
              libc6-dev \
              libbz2-dev \
              libffi-dev \
              zlib1g-dev \
              openssl \
              curl \
              ca-certificates
install:
  docker: true
  script: |-
    build_containerized <<EOF
        mkdir /tmp/python
        curl --silent --location "https://github.com/python/cpython/archive/v${requested_version}.tar.gz" | \
            tar -xzC /tmp/python --strip-components=1
        cd /tmp/python
        CXX="/usr/bin/g++" ./configure \
            --prefix="${TARGET_BASE}" \
            --enable-shared \
            --with-system-expat \
            --with-ensurepip=yes \
            --enable-optimizations \
            LDFLAGS="-Wl,-rpath ${TARGET_BASE}/lib"
        make -j2
        make install
        python3 -m pip install --upgrade pip
    EOF
    docker cp "${container_name}:${TARGET_BASE}" - | \
        ${SUDO} tar -xC "${TARGET_BASE}/.."
